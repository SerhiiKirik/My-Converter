{"version":3,"sources":["api/consts.ts","api/request.ts","api/api.ts","components/CurrencyRow/CurrencyRow.tsx","App.tsx","index.tsx"],"names":["BASE_URL","KEY","request","url","a","fetch","response","ok","Error","status","statusText","json","data","getData","urlParams","searchParams","CurrencyRow","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","id","className","type","value","onChange","defaultValue","map","option","App","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","toAmount","setToAmount","fromAmount","setFromAmount","lodash","require","handleInputChange","event","console","log","target","fetchData","currency","firstCurrency","Object","keys","rates","base","warn","useEffect","convert","useMemo","debounce","f","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faf6a38a.chunk.js","sourcesContent":["export const BASE_URL = 'http://data.fixer.io/api/';\nexport const KEY = '6e759ac0db7ec2e8aab188810ff9cef0';\n","export const request = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error(`Error: ${response.status}: ${response.statusText}`);\n  }\n\n  const data = await response.json();\n\n  return data;\n};\n","import { BASE_URL, KEY } from './consts';\nimport { Rate } from '../components/types';\nimport { request } from './request';\n\nexport const getData = async (urlParams = '', searchParams = '') => request<Rate>(`${BASE_URL}${urlParams}?access_key=${KEY}&${searchParams}`);\n","import React from 'react';\n\ntype Props = {\n  currencyOptions: string[];\n  selectedCurrency: string;\n  onChangeCurrency: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  amount: number;\n  onChangeAmount: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  id: string;\n};\n\nexport const CurrencyRow: React.FC<Props> = (\n  {\n    currencyOptions, selectedCurrency, onChangeCurrency, amount,\n    onChangeAmount, id\n  },\n) => {\n  return (\n    <div className=\"App__input\">\n      <input type=\"text\" className=\"App__input\" value={amount} onChange={onChangeAmount} id={id} defaultValue={0} />\n      <select value={selectedCurrency} onChange={onChangeCurrency}>\n        {currencyOptions.map(option => (\n          <option\n            value={option}\n            key={option}\n          >\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n","import React, {useEffect, useMemo, useState} from 'react';\nimport './App.scss';\nimport { getData } from './api/api';\nimport { CurrencyRow } from './components/CurrencyRow/CurrencyRow';\n\n\nexport const App: React.FC = () => {\n  const [currencyOptions, setCurrencyOptions] = useState<string[]>([]);\n  const [fromCurrency, setFromCurrency] = useState<string>('');\n  const [toCurrency, setToCurrency] = useState<string>('');\n  const [exchangeRate, setExchangeRate] = useState<number>(0);\n  const [toAmount, setToAmount] = useState<number>(0);\n  const [fromAmount, setFromAmount] = useState<number>(0);\n  const lodash = require(\"lodash\");\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(event.target.value)\n    if (event.target.id === 'from') {\n      setFromAmount(+event.target.value);\n    } else {\n      setToAmount(+event.target.value);\n    }\n  };\n\n\n  const fetchData = async () => {\n    try {\n      const currency = await getData('latest', 'format=1');\n\n      const firstCurrency = Object.keys(currency.rates)[0];\n\n      setCurrencyOptions([...Object.keys(currency.rates)]);\n      setFromCurrency(currency.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(+currency.rates[firstCurrency]);\n    } catch (error) {\n      console.warn('Error has occurred when fetching latest rates.');\n    };\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, []);\n\n  const convert = useMemo(\n    () =>\n      lodash.debounce((amount: number, f: (number: number) => void) => {\n        f(amount);\n      }, 1000),\n    []\n  );\n\n  const changeConvertFrom = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFromCurrency(event.target.value);\n  };\n\n  const changeConvertTo = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setToCurrency(event.target.value);\n  };\n\n  useEffect(() => {\n    console.log(fromAmount, exchangeRate)\n    setFromAmount(toAmount ? toAmount / exchangeRate : 0);\n    convert(toAmount ? toAmount / exchangeRate : 0, setFromAmount)\n  }, [toAmount]);\n\n  useEffect(() => {\n    console.log(toAmount, exchangeRate)\n    setToAmount(fromAmount * exchangeRate);\n    convert(fromAmount * exchangeRate, setToAmount)\n  }, [fromAmount]);\n\n\n\n\n  return (\n    <div className=\"App__wrapper\">\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={changeConvertFrom}\n        amount={fromAmount}\n        onChangeAmount={handleInputChange}\n        id={'from'}\n      />\n      <div className=\"App__title\">Convert</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={changeConvertTo}\n        amount={toAmount}\n        onChangeAmount={handleInputChange}\n        id={'to'}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}